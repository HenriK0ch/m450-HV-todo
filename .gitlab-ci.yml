# GitLab CI/CD Pipeline Configuration
# Automates the build, test, and deployment process for a Spring Boot Todo App using Gradle.

stages:
  - build
  - test
  - deploy

# Define the base image for the pipeline
image: gradle:latest

variables:
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle" # Cache Gradle dependencies in the project directory

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

# Build stage
build-job:
  stage: build
  script:
    - echo "Starting the build process..."
    - gradle clean build
  artifacts:
    when: always
    paths:
      - build/libs/*.jar
    expire_in: 1 day

# Unit Test stage
unit-test-job:
  stage: test
  script:
    - echo "Running unit tests..."
    - gradle test
  artifacts:
    when: always
    reports:
      junit:
        - build/test-results/test/*.xml
    paths:
      - build/reports/tests/test/index.html

# Lint Test stage
lint-test-job:
  stage: test
  script:
    - echo "Linting the code..."
    - gradle check
  artifacts:
    when: always
    paths:
      - build/reports/checkstyle/*.html

# Integration Test stage
integration-test-job:
  stage: test
  script:
    - echo "Running integration tests..."
    - gradle integrationTest
  artifacts:
    when: always
    reports:
      junit:
        - build/test-results/integrationTest/*.xml
    paths:
      - build/reports/tests/integrationTest/index.html

# Deployment stage
deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying the application..."
    - java -jar build/libs/*.jar
    - echo "Application successfully deployed."

pages:
  stage: deploy
  script:
    - gradle site
    - mv build/reports/site public
  artifacts:
    paths:
      - public
    expire_in: 1 day

# Optional: Docker setup for database testing
services:
  - name: postgres:latest
    alias: db
  variables:
    POSTGRES_DB: testdb
    POSTGRES_USER: testuser
    POSTGRES_PASSWORD: testpassword
