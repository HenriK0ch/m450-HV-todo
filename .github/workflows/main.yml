# .github/workflows/gradle-ci.yml

name: CI Workflow

# Triggers for the workflow
on:
  push:
    branches:
      - main # Run on pushes to the main branch
  pull_request:
    branches:
      - main # Run on pull requests targeting the main branch
  workflow_dispatch: # Enable manual workflow execution

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Build the project
      - name: Build with Gradle
        run: ./gradlew clean build

      # Step 5: Run tests
      - name: Run tests
        run: ./gradlew test

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build # Only run if the build job succeeds

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      # Step 3: Deploy the application
      - name: Deploy application
        run: |
          echo "Deploying application..."
          java -jar build/libs/*.jar
          echo "Application successfully deployed."
